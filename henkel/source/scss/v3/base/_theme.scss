// -----------------------------------------------------------------------------
// Theme
// 
// -----------------------------------------------------------------------------
// @use 'sass:math';
// @use 'sass:string';
// @use '../frankly/font';
// @use '../frankly/cast';
// @use '../frankly/theme';

@use '../assemble/config';

@mixin theme {


    $color-config: config.$color-config;
    @at-root {
        // ------------------------------------------------------------------------
        // Colors ðŸŽ¨
        // ------------------------------------------------------------------------
        * {
            
            --color-text-desktop: inherit; 
            --color-text-tablet:  inherit; 
            --color-text-mobile:  inherit; 
            --color-text: inherit;

            
            // disable background color to avoid inheritance override 
            // Safari sucks soooo bad ðŸ¤¬
            // .... explain this!!! 
            --color-back-desktop: var(--color-back);
            --color-back-tablet:  var(--color-back);
            --color-back-mobile:  var(--color-back);
            --color-back: var(--off);


            --ðŸŽ¨-if-color-back-desktop: var(--is-desktop) var(--color-back-desktop);
            --ðŸŽ¨-if-color-back-tablet: var(--is-tablet) var(--color-back-tablet);
            --ðŸŽ¨-if-color-back-mobile: var(--is-mobile) var(--color-back-mobile);
            --ðŸŽ¨-color-back:  var(--ðŸŽ¨-if-color-back-desktop, var(--ðŸŽ¨-if-color-back-tablet, var(--ðŸŽ¨-if-color-back-mobile)));   

            --ðŸŽ¨-if-color-text-desktop: var(--is-desktop) var(--color-text-desktop);
            --ðŸŽ¨-if-color-text-tablet: var(--is-tablet) var(--color-text-tablet);
            --ðŸŽ¨-if-color-text-mobile: var(--is-mobile) var(--color-text-mobile);
            --ðŸŽ¨-color-text:  var(--ðŸŽ¨-if-color-text-desktop, var(--ðŸŽ¨-if-color-text-tablet, var(--ðŸŽ¨-if-color-text-mobile, var(--color-text))));   
        

            color: var(--ðŸŽ¨-color-text);
        }


        :is(
            [data-color*="back-"],
            [data-color-mobile*="back"],
            [data-color-tablet*="back"],
            [data-color-desktop*="back"]
        ){
            background-color: var(--ðŸŽ¨-color-back);
        }

          

        // if element has a data-color attribute (default)
        // make other breakpoints default to --color-text
        :where([data-color*=text]) {
            --color-text-desktop: var(--color-text);
            --color-text-tablet:  var(--color-text); 
            --color-text-mobile:  var(--color-text);
            --color-text: inherit;            
        }




        html {
            @each $name, $color in $color-config {
                --color-#{$name}: #{$color};
            }
        }
        


        @each $bp in null desktop tablet mobile   {
            $sel: if($bp, data-color-#{$bp}, data-color);
            $var-back: if($bp, --color-back-#{$bp}, --color-back);
            $var-text: if($bp, --color-text-#{$bp}, --color-text);
            

            :where([#{$sel}]:not([#{$sel}*="text"])) {
            #{$var-text}: var(--color-black);
            }

            // Auto contrast 
            // Note this does not use WCAG 2.1 
            // (because it favour black too much) 
            :where(
                [#{$sel}*="dark"],
                [#{$sel}*="black"],
                [#{$sel}*="brand"],
                [#{$sel}*="correct"],
                [#{$sel}$="red"]
            ):not([#{$sel}*="text"]) {
                #{$var-text}: var(--color-white);
            }
           
            @each $name, $color in $color-config {
                [#{$sel}~=back-#{$name}] { #{$var-back}: var(--color-#{$name}); }
                [#{$sel}~=text-#{$name}] { #{$var-text}: var(--color-#{$name}); }
            }
        }
    }


    // Moved to individual selectors to avoid misfire
    // avoid redundant assignment 
    // [data-color],[data-color-mobile],[data-color-tablet],[data-color-desktop]{
    //     background-color: var(--ðŸŽ¨-color-back);
    //     color: var(--ðŸŽ¨-color-text);
    // }

}


@function color($name) {
    @return var(--color-#{$name});
}
