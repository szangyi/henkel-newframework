@use '../assemble/config' as *;


// -----------------------------------------------------------------------------
// Reset
// -----------------------------------------------------------------------------

@mixin reset {
    
    *, *::before, *::after {
        box-sizing: border-box;
        position: relative;
        background-repeat: no-repeat;
    }

    html {
		--safe-area-inset-top   : 0;
		--safe-area-inset-right : 0;
		--safe-area-inset-bottom: 0;
		--safe-area-inset-left  : 0;

		--safe-area-inset-top   : constant(safe-area-inset-top);
		--safe-area-inset-right : constant(safe-area-inset-right);
		--safe-area-inset-bottom: constant(safe-area-inset-bottom);
		--safe-area-inset-left  : constant(safe-area-inset-left);

		--safe-area-inset-top   : env(safe-area-inset-top);
		--safe-area-inset-right : env(safe-area-inset-right);
		--safe-area-inset-bottom: env(safe-area-inset-bottom);
		--safe-area-inset-left  : env(safe-area-inset-left);
	}

    html, body {
        min-block-size: 100vh;
        min-block-size: 100svh;

        // -webkit-overflow-x-scrolling: touch; // to prevent horizontal scrolling on Safari iphone

        -moz-osx-font-smoothing: grayscale;
         -webkit-font-smoothing: antialiased;

        -webkit-tap-highlight-color: transparent;   
        -webkit-text-size-adjust: 100%;
    }

    body {
        background-color: var(--color-grey-darkest);
    }

    body, nav, header, main, footer, aside, article, section, figure {
        display: block;
        margin: 0;
        padding-block: .01px;
        isolation: isolate;
    }

    picture, video, img, svg, canvas {
        display: block;
    }

    a, button, label, select {
        cursor: pointer;
        touch-action: manipulation;
    }

    :where(button, input, a) {
        font: inherit;
        color: inherit;
    }

    :is(a, button) * {
        pointer-events: none;
    }

    ul ,ol {
		&.reset {
			list-style: none;
			margin: 0;
			padding: 0;
		}
	}


}



